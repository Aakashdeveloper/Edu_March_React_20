> https://code.visualstudio.com/
> https://nodejs.org/en/
> https://github.com/
> https://github.com/Aakashdeveloper

//Javascript


//npm
Node package Manager

//xml yml json
//package.json
JSON => Javascript Object Notation
[
    {
        name:"abc",
        class:1,
    },
    {
        name:"xyz",
        class:1,
    }
]

//package.json
> First file to run
> Contain description
> Packages
> Version
> Start, test, build Script

//setup of React

//JSX

/************************
Step to create package.json
************************/
**must install nodejs
> Open your cmd/Terminal
> Navigate to the folder where you want to generate
> type 'npm init'
> Answer all question
> type 'yes'

/************************
How to install packages
************************/
> Global => Local to the system
(Create,Build,Test)

> Local => Local to folder

/******Local package******/
> Open your cmd/Terminal
> Navigate to the folder where you want to generate
> npm i react/npm install react/npm i react --save -dev

/******Gloabl package******/
#Win
> run your cmd as admin
> npm i -g @aakashdeveloper/create-node-app

#Mac
> run your terminal
> sudo npm i -g @aakashdeveloper/create-node-app

**Global depedency will add to package.json
**To install global admin permission


/************************
Step to create React App
************************/
Win
> run your cmd as admin
> npm i -g create-react-app
> Open your cmd
> Navigate to the folder where you want to generate
> create-react-app <appname>
> cd appname
> npm Start
> localhost:3000

Mac/Linux

> run your terminal
> sudo npm i -g create-react-app
> Open your cmd
> Navigate to the folder where you want to generate
> create-react-app <appname>
> cd appname
> npm Start
> localhost:3000

npx create-react-app appname



//Generate react
//Walk through of folder
//component addiing css

////Component in React App////
Functional               | ClassBase
---------------------------------------------------
Dumb Component           | Logical Component
Display Component        |
light in weight          | Heavy as compare of functional
Cannot maintain state    | Can maintain state
normal function          | Class method



STATE & Props

State = Local variable in component
        (any data declare or data interaction)
Props = Use to transfer the data

ComponentA            ====>         ComponentB
State{                Props         State{}
    title:'React'
}


ClassComponentA       =====>      FunctionalComponentB
>We will call API     Props       > Will recive props with data
>Data of API we will              > Than we will display
 save in state


tagname
class
id

//Display Data in component
//Pass Data from one comp to other
//Search bar
//Routing

// Filter, Map & .bind in Javascript
// cssbootstrap


